#| output: true
#| echo: false
import matplotlib.pyplot as plt
from matplotlib_venn import venn2
# Create a Venn diagram
plt.figure(figsize=(8, 8))
venn = venn2(subsets=(1, 1, 1), set_labels=('Machine Learning', 'Causal Inference'))
# Customize the diagram's appearance
venn.get_label_by_id('10').set_text('')
venn.get_label_by_id('01').set_text('')
venn.get_label_by_id('11').set_text('Intersection\n(e.g., Causal ML)')
# Display the diagram
plt.show()
#| output: true
#| echo: false
import matplotlib.pyplot as plt
from matplotlib_venn import venn2
# Create a Venn diagram
plt.figure(figsize=(8, 8))
venn = venn2(subsets=(1, 1, 1), set_labels=('Machine Learning', 'Causal Inference'))
# Customize the diagram's appearance
venn.get_label_by_id('10').set_text('')
venn.get_label_by_id('01').set_text('')
venn.get_label_by_id('11').set_text('Intersection\n(e.g., Causal ML)')
# Display the diagram
plt.show()
#| echo: true
#| output: true
#| code-outflow: scroll
# !pip install pandas
import pandas as pd
import numpy as np
breast_cancer = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data', header = None)
breast_cancer.columns = ['id', 'clump', 'cell_size', 'cell_shape', 'adhesion', 'epithlial', 'bare_nuclei', 'chromatin', 'normal_nucleoli', 'mitoses', 'class']
breast_cancer.head()
#| echo: true
#| output: true
#| code-outflow: scroll
breast_cancer['bare_nuclei'].replace('?', np.nan, inplace=True)
breast_cancer.dropna(subset = ['bare_nuclei'], axis=0, inplace=True)
breast_cancer['bare_nuclei'] = breast_cancer['bare_nuclei'].astype('int')
breast_cancer['class'] = breast_cancer['class'].astype('char')
?breast_cancer['class'].astype
#| echo: true
#| output: true
#| code-outflow: scroll
breast_cancer['bare_nuclei'].replace('?', np.nan, inplace=True)
breast_cancer.dropna(subset = ['bare_nuclei'], axis=0, inplace=True)
breast_cancer['bare_nuclei'] = breast_cancer['bare_nuclei'].astype('int')
breast_cancer['class'] = breast_cancer['class'].astype('str')
#| echo: true
#| output: true
#| code-outflow: scroll
# !pip install pandas
import pandas as pd
import numpy as np
breast_cancer = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data', header = None)
breast_cancer.columns = ['id', 'clump', 'cell_size', 'cell_shape', 'adhesion', 'epithlial', 'bare_nuclei', 'chromatin', 'normal_nucleoli', 'mitoses', 'class']
breast_cancer.head()
#| echo: true
#| output: true
#| code-outflow: scroll
breast_cancer['bare_nuclei'].replace('?', np.nan, inplace=True)
breast_cancer.dropna(subset = ['bare_nuclei'], axis=0, inplace=True)
breast_cancer['bare_nuclei'] = breast_cancer['bare_nuclei'].astype('int')
breast_cancer['class'] = breast_cancer['class'].astype('str')
#| echo: true
#| output: true
#| code-outflow: scroll
# !pip install pandas
import pandas as pd
import numpy as np
breast_cancer = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data', header = None)
breast_cancer.columns = ['id', 'clump', 'cell_size', 'cell_shape', 'adhesion', 'epithlial', 'bare_nuclei', 'chromatin', 'normal_nucleoli', 'mitoses', 'class']
breast_cancer.head()
#| echo: true
#| output: true
#| code-outflow: scroll
breast_cancer['bare_nuclei'] = breast_cancer['bare_nuclei'].replace('?', np.nan)
breast_cancer.dropna(subset = ['bare_nuclei'], axis=0, inplace=True)
breast_cancer['bare_nuclei'] = breast_cancer['bare_nuclei'].astype('int')
breast_cancer['class'] = breast_cancer['class'].astype('str')
reticulate::repl_python()
